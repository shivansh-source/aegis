{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivansh sinha\\\\Desktop\\\\ai-in-defense\\\\ai-in-defense\\\\client\\\\src\\\\components\\\\MapView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MapView = ({\n  center,\n  troops\n}) => {\n  _s();\n  const mapContainer = useRef(null);\n  const mapInstance = useRef(null);\n  useEffect(() => {\n    if (!mapContainer.current) return;\n\n    // Only initialize map if it doesn't already exist\n    if (!mapInstance.current) {\n      mapInstance.current = L.map(mapContainer.current).setView(center, 3);\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: \"&copy; OpenStreetMap contributors\"\n      }).addTo(mapInstance.current);\n    } else {\n      // If map exists, just update the view\n      mapInstance.current.setView(center, 3);\n    }\n    const map = mapInstance.current;\n\n    // Create circle groups for easier management\n    const circleGroup = L.layerGroup().addTo(map);\n\n    // Create circles with fixed radius, using color to indicate side\n    troops.forEach(t => {\n      const radius = 50000; // Fixed radius to avoid NaN issues\n      const color = t.side === 'A' ? 'blue' : 'red';\n      L.circle([t.lat, t.lng], {\n        radius: radius,\n        color: color,\n        fillColor: color,\n        fillOpacity: 0.3\n      }).addTo(circleGroup);\n    });\n\n    // Fix for resizing issues\n    setTimeout(() => map.invalidateSize(), 100);\n    return () => {\n      // Only remove circles, not the map\n      circleGroup.clearLayers();\n    };\n  }, [center, troops]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainer,\n    className: \"w-full h-96 rounded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(MapView, \"QXcr2GMt+uX8B+INCRY47rPynxI=\");\n_c = MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","MapView","center","troops","_s","mapContainer","mapInstance","current","map","setView","tileLayer","attribution","addTo","circleGroup","layerGroup","forEach","t","radius","color","side","circle","lat","lng","fillColor","fillOpacity","setTimeout","invalidateSize","clearLayers","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shivansh sinha/Desktop/ai-in-defense/ai-in-defense/client/src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\ninterface TroopPosition {\r\n  lat: number;\r\n  lng: number;\r\n  side: 'A' | 'B'; // Using side instead of quantity for troop positions\r\n}\r\n\r\ninterface Props {\r\n  center: [number, number];\r\n  troops: TroopPosition[];\r\n}\r\n\r\nexport const MapView: React.FC<Props> = ({ center, troops }) => {\r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const mapInstance = useRef<L.Map | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!mapContainer.current) return;\r\n\r\n    // Only initialize map if it doesn't already exist\r\n    if (!mapInstance.current) {\r\n      mapInstance.current = L.map(mapContainer.current).setView(center, 3);\r\n      \r\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n        attribution: \"&copy; OpenStreetMap contributors\",\r\n      }).addTo(mapInstance.current);\r\n    } else {\r\n      // If map exists, just update the view\r\n      mapInstance.current.setView(center, 3);\r\n    }\r\n\r\n    const map = mapInstance.current;\r\n\r\n    // Create circle groups for easier management\r\n    const circleGroup = L.layerGroup().addTo(map);\r\n\r\n    // Create circles with fixed radius, using color to indicate side\r\n    troops.forEach((t) => {\r\n      const radius = 50000; // Fixed radius to avoid NaN issues\r\n      const color = t.side === 'A' ? 'blue' : 'red';\r\n      \r\n      L.circle([t.lat, t.lng], {\r\n        radius: radius,\r\n        color: color,\r\n        fillColor: color,\r\n        fillOpacity: 0.3\r\n      }).addTo(circleGroup);\r\n    });\r\n\r\n    // Fix for resizing issues\r\n    setTimeout(() => map.invalidateSize(), 100);\r\n\r\n    return () => {\r\n      // Only remove circles, not the map\r\n      circleGroup.clearLayers();\r\n    };\r\n  }, [center, troops]);\r\n\r\n  return <div ref={mapContainer} className=\"w-full h-96 rounded\" />;\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAalC,OAAO,MAAMC,OAAwB,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAMC,YAAY,GAAGR,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAMS,WAAW,GAAGT,MAAM,CAAe,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,YAAY,CAACE,OAAO,EAAE;;IAE3B;IACA,IAAI,CAACD,WAAW,CAACC,OAAO,EAAE;MACxBD,WAAW,CAACC,OAAO,GAAGT,CAAC,CAACU,GAAG,CAACH,YAAY,CAACE,OAAO,CAAC,CAACE,OAAO,CAACP,MAAM,EAAE,CAAC,CAAC;MAEpEJ,CAAC,CAACY,SAAS,CAAC,oDAAoD,EAAE;QAChEC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,KAAK,CAACN,WAAW,CAACC,OAAO,CAAC;IAC/B,CAAC,MAAM;MACL;MACAD,WAAW,CAACC,OAAO,CAACE,OAAO,CAACP,MAAM,EAAE,CAAC,CAAC;IACxC;IAEA,MAAMM,GAAG,GAAGF,WAAW,CAACC,OAAO;;IAE/B;IACA,MAAMM,WAAW,GAAGf,CAAC,CAACgB,UAAU,CAAC,CAAC,CAACF,KAAK,CAACJ,GAAG,CAAC;;IAE7C;IACAL,MAAM,CAACY,OAAO,CAAEC,CAAC,IAAK;MACpB,MAAMC,MAAM,GAAG,KAAK,CAAC,CAAC;MACtB,MAAMC,KAAK,GAAGF,CAAC,CAACG,IAAI,KAAK,GAAG,GAAG,MAAM,GAAG,KAAK;MAE7CrB,CAAC,CAACsB,MAAM,CAAC,CAACJ,CAAC,CAACK,GAAG,EAAEL,CAAC,CAACM,GAAG,CAAC,EAAE;QACvBL,MAAM,EAAEA,MAAM;QACdC,KAAK,EAAEA,KAAK;QACZK,SAAS,EAAEL,KAAK;QAChBM,WAAW,EAAE;MACf,CAAC,CAAC,CAACZ,KAAK,CAACC,WAAW,CAAC;IACvB,CAAC,CAAC;;IAEF;IACAY,UAAU,CAAC,MAAMjB,GAAG,CAACkB,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC;IAE3C,OAAO,MAAM;MACX;MACAb,WAAW,CAACc,WAAW,CAAC,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACzB,MAAM,EAAEC,MAAM,CAAC,CAAC;EAEpB,oBAAOH,OAAA;IAAK4B,GAAG,EAAEvB,YAAa;IAACwB,SAAS,EAAC;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE,CAAC;AAAC7B,EAAA,CA/CWH,OAAwB;AAAAiC,EAAA,GAAxBjC,OAAwB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}